@page "/grid"



@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Buttons

<SfButton @onclick="@OpenDialog">Open Dialog</SfButton>

<SfDialog Width="700px" ShowCloseIcon="true" IsModal="true" @bind-Visible="@IsVisible">
    <DialogTemplates>
        <Header> Dialog </Header>
        <Content> 
        
            <div class="container">
                <div class="row">
                    <div class="card w-100">
                        <div class="card-header">
                            Change log audit trail
                        </div>
                        <div class="card-body">
                            <div class="card">
                                <div class="row">
                                    <div class="col-12 d-flex bd-highlight">
                                        <div class="p-2 flex-grow-1 bd-highlight">
                                            assssss
                                        </div>
                                        <div class="p-2 bd-highlight">
                                            <button class="btn btn-default">
                                                <img src="images/print.jfif" width="40" />
                                            </button>
                                            <button class="btn btn-default">
                                                <img src="images/excel.png" width="40" />
                                            </button>
                                        </div>
                                        <div class="p-2 bd-highlight">
                                            <button type="button" class="btn btn-outline-primary cMargin">Done Viewing</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <br />

                            <div class="card">
                                <div class="card-body">
                                    <SfGrid DataSource="@Orders" AllowPaging="false">
                                        <GridPageSettings PageSize="5"></GridPageSettings>
                                        <GridColumns>
                                            <GridColumn Field=@nameof(Order.OrderID) HeaderText="What was changed" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(Order.CustomerID) HeaderText="When changed" Width="150"></GridColumn>
                                            <GridColumn Field=@nameof(Order.OrderDate) HeaderText="Changed By" Width="130"></GridColumn>
                                            <GridColumn Field=@nameof(Order.Freight) HeaderText="Prior value" Width="120"></GridColumn>
                                            <GridColumn Field=@nameof(Order.Freight) HeaderText="New value" Width="120"></GridColumn>
                                        </GridColumns>
                                    </SfGrid>

                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-check">
                                        <label class="form-check-label" for="flexCheckDefault">
                                            Changes:
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="OK" IsPrimary="true" OnClick="@CloseDialog" />
        <DialogButton Content="Cancel" OnClick="@CloseDialog" />
    </DialogButtons>
</SfDialog>


@code {

    private bool IsVisible { get; set; } = true;

    private void OpenDialog()
    {
        this.IsVisible = true;
    }

    private void CloseDialog()
    {
        this.IsVisible = false;
    }

    public List<Order> Orders { get; set; }

    protected override void OnInitialized()
    {
        Orders = Enumerable.Range(1, 5).Select(x => new Order()
        {
            OrderID = (new string[] { "string", "string", "string", "string", "string" })[new Random().Next(5)],
            CustomerID = (new string[] { "string", "string", "string", "string", "string" })[new Random().Next(5)],
            Freight = (new string[] { "string", "string", "string", "string", "string" })[new Random().Next(5)],
            OrderDate = (new string[] { "string", "string", "string", "string", "string" })[new Random().Next(5)],
        }).ToList();
    }

    public class Order
    {
        public string OrderID { get; set; }
        public string CustomerID { get; set; }
        public string OrderDate { get; set; }
        public string Freight { get; set; }
    }


}